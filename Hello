- name: Pause processes, change UID, and resume processes for mgmtbld
  hosts: all
  become: yes
  tasks:
    - name: List running processes for mgmtbld
      shell: pgrep -u mgmtbld
      register: mgmtbld_processes
      failed_when: mgmtbld_processes.rc not in [0, 1]
      changed_when: false

    - name: Pause running processes for mgmtbld
      shell: kill -SIGSTOP {{ item }}
      with_items: "{{ mgmtbld_processes.stdout_lines }}"
      when: mgmtbld_processes.rc == 0

    - name: Change UID of mgmtbld
      user:
        name: mgmtbld
        uid: 1234  # Desired UID

    - name: Resume paused processes for mgmtbld
      shell: kill -SIGCONT {{ item }}
      with_items: "{{ mgmtbld_processes.stdout_lines }}"
      when: mgmtbld_processes.rc == 0


- name: Pause processes, change UID, and resume processes for mgmtbld
  hosts: all
  become: yes
  tasks:
    - name: List running processes for mgmtbld
      shell: pgrep -u mgmtbld
      register: mgmtbld_processes
      failed_when: mgmtbld_processes.rc not in [0, 1]
      changed_when: false

    - name: Pause running processes for mgmtbld
      shell: |
        for pid in {{ mgmtbld_processes.stdout_lines | join(' ') }}; do
          timeout 5s kill -STOP $pid
        done
      when: mgmtbld_processes.rc == 0

    - name: Change UID of mgmtbld
      user:
        name: mgmtbld
        uid: 1234  # Desired UID

    - name: Resume paused processes for mgmtbld
      shell: |
        for pid in {{ mgmtbld_processes.stdout_lines | join(' ') }}; do
          kill -CONT $pid
        done
      when: mgmtbld_processes.rc == 0




- name: Pause processes, change UID, and resume processes for mgmtbld
  hosts: all
  become: yes
  tasks:
    - name: List running processes for mgmtbld
      shell: pgrep -u mgmtbld
      register: mgmtbld_processes
      failed_when: mgmtbld_processes.rc not in [0, 1]
      changed_when: false

    - name: Pause running processes for mgmtbld
      shell: |
        paused_pids=""
        for pid in {{ mgmtbld_processes.stdout_lines | join(' ') }}; do
          if timeout 5s kill -STOP $pid; then
            paused_pids+="$pid "
          fi
        done
        echo $paused_pids
      register: paused_processes
      when: mgmtbld_processes.rc == 0

    - name: Change UID of mgmtbld
      user:
        name: mgmtbld
        uid: 1234  # Desired UID
      when: paused_processes.stdout != ""

    - name: Resume paused processes for mgmtbld
      shell: |
        for pid in {{ paused_processes.stdout | trim | split(' ') }}; do
          kill -CONT $pid
        done
      when: paused_processes.stdout != ""





- name: Pause processes, update sudoers, set UID, and resume processes
  hosts: all
  become: yes
  tasks:
    - name: List running processes for Jenkins user
      shell: pgrep -u Tegethid
      register: jenkins_processes
      failed_when: jenkins_processes.rc != 0
      changed_when: false

    - name: Debug Jenkins processes
      debug:
        var: jenkins_processes

    - name: Pause running processes for Jenkins user
      shell: |
        for pid in {{ jenkins_processes.stdout_lines }}; do
          kill -STOP $pid
        done
      when: jenkins_processes.rc == 0

    - name: Add Jenkins user to sudoers list
      copy:
        content: "Tegethid ALL=(ALL:ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/Tegethid
        mode: '0440'
      become_user: root

    - name: Set UID for Jenkins user
      user:
        name: Tegethid
        uid: <desired_UID_here>
      become_user: root

    - name: Resume paused processes for Jenkins user
      shell: |
        for pid in {{ jenkins_processes.stdout_lines }}; do
          kill -CONT $pid
        done
      when: jenkins_processes.rc == 0





- name: Wait for processes to terminate, update sudoers, set UID, and resume processes
  hosts: all
  become: yes
  tasks:
    - name: List running processes for Jenkins user
      shell: pgrep -u Tegethid
      register: jenkins_processes
      changed_when: jenkins_processes.stdout_lines | length > 0

    - name: Debug Jenkins processes
      debug:
        var: jenkins_processes.stdout_lines

    - name: Wait until all processes are terminated
      shell: pgrep -u Tegethid
      register: check_processes
      until: check_processes.stdout_lines | length == 0
      retries: 30
      delay: 20

    - name: Add Jenkins user to sudoers list
      copy:
        content: "Tegethid ALL=(ALL:ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/Tegethid
        mode: '0440'
      become_user: root

    - name: Set UID for Jenkins user
      user:
        name: Tegethid
        uid: <desired_UID_here>
      become_user: root


gcloud container images list --repository=gcr.io/PROJECT_ID/FOLDER_NAME --format='get(NAME)' | xargs -I {} gcloud container images delete {} --force-delete-tags --quiet

---
- hosts: your_host
  become: yes
  tasks:
    - name: Download package from Nexus
      ansible.builtin.get_url:
        url: "http://nexus.example.com/repository/path/to/package.zip"
        dest: "/tmp/package.zip"

    - name: Unzip the package
      ansible.builtin.unarchive:
        src: "/tmp/package.zip"
        dest: "/opt/your_application"
        remote_src: yes
        creates: "/opt/your_application/extracted_file.txt"  # Specify a file present after extraction

    - name: Create symlink
      ansible.builtin.file:
        src: "/opt/your_application/extracted_file.txt"
        dest: "/path/to/symlink"
        state: link
        force: yes






---
- name: Create user and group with specific UID and GID
  hosts: all
  become: yes
  tasks:
    - name: Create mgmtbld group with GID 2016
      command: groupadd -g 2016 mgmtbld
      become: yes

    - name: Create mgmtbld user with UID 2014, primary group 2016, home directory /home/mgmtbld, and shell /bin/bash
      command: useradd -u 2014 -g 2016 -d /home/mgmtbld -s /bin/bash mgmtbld
      become: yes

    - name: Create /home/mgmtbld directory
      file:
        path: /home/mgmtbld
        state: directory
        owner: mgmtbld
        group: mgmtbld
        mode: '0777'
